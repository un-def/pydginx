[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "pydginx"
description = "nginx.conf as code"
readme = "README.md"
license = {text = "MIT"}
authors = [{name = "Dmitry Meyer", email = "me@undef.im"}]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Developers",
    "Topic :: Utilities",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.12"
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/un-def/pydginx"
Repository = "https://github.com/un-def/pydginx.git"
Changelog = "https://github.com/un-def/pydginx/blob/master/CHANGELOG.md"
Issues = "https://github.com/un-def/pydginx/issues"

[tool.setuptools.dynamic]
version = {attr = "pydginx.__version__"}

[tool.setuptools]
zip-safe = true
include-package-data = false

[tool.ruff]
preview = true
line-length = 79

[tool.ruff.lint]
select = ["F", "E"]

[tool.isort]
lines_after_imports = 2
multi_line_output = 5
include_trailing_comma = true
use_parentheses = true
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "TESTS", "LOCALFOLDER"]
known_tests = ["tests"]

[tool.pyright]
include = ["src/**", "tests/**"]
pythonVersion = "3.12"
deprecateTypingAliases = true
typeCheckingMode = "strict"
reportPropertyTypeMismatch = "error"
reportMissingTypeStubs = "warning"
reportUnusedImport = "error"
reportUnusedClass = "error"
reportUnusedFunction = "error"
reportUnusedVariable = "error"
reportUnusedExpression = "error"
reportUnusedExcept = "error"
reportWildcardImportFromLibrary = "error"
reportUntypedFunctionDecorator = "error"
reportUntypedClassDecorator = "error"
reportUntypedBaseClass = "error"
reportUntypedNamedTuple = "error"
reportPrivateUsage = "error"
reportConstantRedefinition = "error"
reportDeprecated = "warning"
reportInconsistentConstructor = "warning"
reportDuplicateImport = "error"
reportUnknownArgumentType = "error"
reportUnknownLambdaType = "error"
reportUnknownMemberType = "error"
reportUnknownParameterType = "error"
reportUnknownVariableType = "error"
reportMissingTypeArgument = "error"
reportUnnecessaryCast = "error"
reportUnnecessaryIsInstance = "error"
reportUnnecessaryComparison = "error"
reportUnnecessaryContains = "error"
reportInvalidStubStatement = "warning"
reportIncompleteStub = "warning"
reportUnnecessaryTypeIgnoreComment = "warning"
reportMatchNotExhaustive = "warning"
reportShadowedImports = "warning"

[tool.pytest.ini_options]
addopts = ["--strict-markers"]
testpaths = ["tests"]
filterwarnings = ["error"]
